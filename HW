#include <iostream>
#include <iomanip>
#include <cmath>
#include <string>


int hw46()
{
	string a;
	bool f = 0;
	int s = 0;
	cin >> a;
	for (int i = 0; i < a.length(); i++)
	{
		if (a[i] == 'M')
			s += 1000;
		else if (a[i] == 'D')
		{
			for (int j = i; j < a.length(); j++)
			{
				if (a[j] == 'M')
					f = 1;
			}
			if (f == 1) s -= 500;
			else s += 500;
			f = 0;
		}
		else if (a[i] == 'C')
		{
			for (int j = i; j < a.length(); j++)
			{
				if (a[j] == 'M' || a[j] == 'D')
					f = 1;
			}
			if (f == 1) s -= 100;
			else s += 100;
			f = 0;
		}
		else if (a[i] == 'L')
		{
			for (int j = i; j < a.length(); j++)
			{
				if (a[j] == 'M' || a[j] == 'D' || a[j] == 'C')
					f = 1;
			}
			if (f == 1) s -= 50;
			else s += 50;
			f = 0;
		}
		else if (a[i] == 'X')
		{
			for (int j = i; j < a.length(); j++)
			{
				if (a[j] == 'M' || a[j] == 'D' || a[j] == 'C' || a[j] == 'L')
					f = 1;
			}
			if (f == 1) s -= 10;
			else s += 10;
			f = 0;
		}
		else if (a[i] == 'V')
		{
			for (int j = i; j < a.length(); j++)
			{
				if (a[j] == 'M' || a[j] == 'D' || a[j] == 'C' || a[j] == 'L' || a[j] == 'X')
					f = 1;
			}
			if (f == 1) s -= 5;
			else s += 5;
			f = 0;
		}
		else
		{
			for (int j = i; j < a.length(); j++)
			{
				if (a[j] == 'M' || a[j] == 'D' || a[j] == 'C' || a[j] == 'L' || a[j] == 'X' || a[j] == 'V')
					f = 1;
			}
			if (f == 1) s -= 1;
			else s += 1;
			f = 0;
		}                            
	}
	cout << s;

	return 0;
}


int hw45(void)
{
	float x;
	HDC hDC = GetDC(GetConsoleWindow());
	HPEN Pen = CreatePen(PS_SOLID, 2, RGB(255, 255, 255));
	SelectObject(hDC, Pen);
	MoveToEx(hDC, 0, 300, NULL);
	LineTo(hDC, 1000, 300);
	MoveToEx(hDC, 500, 100, NULL);
	LineTo(hDC, 500, 600);
	for (x = -35.0; x <= 35.0; x += 0.01)
	{
		MoveToEx(hDC, 10 * x + 10, -150 * graphic(x) + 300, NULL);
		LineTo(hDC, 10 * x + 10, -150 * graphic(x) + 300);
	}
	return 0;
}

int evk()
{
	int a, b, n = 0;
	cin >> a >> b;
	if (a < b)
	{
		for (int i = 1; i <= a; i++)
			if (a % i == 0 && b % i == 0) n = i;
	}
	else
	{
		for (int i = 1; i <= b; i++)
			if (a % i == 0 && b % i == 0)
				n = i;
	}
	if (n == 0) cout << "not found";
	else cout << "NOD:" << n;
	return 0 ;
}

int eratos()
{
	int n, h = 1;
	cin >> n;
	if (n >= 2)
	{
		for (int i = 2; i <= n; i++)
			if (i % 2 != 0 && i % 3 != 0 && i % 5 != 0 && i % 7 != 0 || i == 2 || i == 3 || i == 5 || i == 7) cout << i << " ";
	}
	else cout << "nope";
	return 0;
}

int hw23()
{
	double y, b, x, z;
	cin >> x >> y >> b;
	if (y >= b || b < x)
		cout << "error";
	else
	{
		z = log(b - y) * sqrt(b - x);
		cout << z;
	}
	return 0;
}


int hw22()
{
	double x, a, s;
	cin >> x >> a;
	if (abs(x) < 1 && x != 0)
	{
		s = a * log(abs(x));
		cout << s;
	}
	else if (abs(x) >= 1 && x * x <= a)
	{
		s = sqrt(a - x * x);
		cout << s;
	}
	else
		cout << "Error";
	return 0;
}

int hw33()
{
	char a[100];
	ofstream text;
	text.open("textc.txt");
	text << "Запись в фаfffffffffffffйл, ок.";
	text.close();
	ifstream textc("textc.txt");
	textc.getline(a, 100);
	textc.close();
	cout << a;
	return 0;
}

int hw34()
{
	bool f = 0;
	string a = "";
	cin >> a;
	char *A=new char[a.length()] ;
	ofstream text("textc.txt");
	text << a;
	text.close();
	ifstream textc("textc.txt");
	textc >> a;
	textc.close();
	for (int i = 0; i < a.length(); i++)
	{
		if (isdigit(a[i]) && f == 0)
		{
			cout << " " << a[i];
			f = 1;
		}
		else if (isdigit(a[i]))
		{
			cout << a[i];
			f = 1;
		}
		else f = 0;
	}
	return 0;
}

int hw35()
{
	char t;
	string a = "";
	cin >> a;
	char* A = new char[a.length()];
	for (int i = 0; i < a.length(); i++)
		if (a[i] > a[i + 1])
		{
			t = a[i + 1];
			a[i + 1] = a[i];
			a[i] = t;
			if (i != 0) i = i - 2;
		}
	cout << a;
	return 0;
}

int HW32()
{
	double s, p = 0, m0, m=-1, n;
	cin >> s >> m0 >> n;
	while (m < m0)
	{
		p += 0.01;
		m = (s * p * pow(1 + p, n)) / (12 * (pow(1 + p, n) - 1));
	}
	p -= 0.01;
	while (m < m0)
	{
		p += 0.0001;
		m = (s * p * pow(1 + p, n)) / (12 * (pow(1 + p, n) - 1));
	}
	p -= 0.0001;
	while (m < m0)
	{
		p += 0.000001;
		m = (s * p * pow(1 + p, n)) / (12 * (pow(1 + p, n) - 1));
	}
	p -= 0.000001;
	while (m < m0)
	{
		p += 0.01;
		m = (s * p * pow(1 + p, n)) / (12 * (pow(1 + p, n) - 1));
	}
	p -= 0.00000001;
	while (m < m0)
	{
		p += 0.000000000001;
		m = (s * p * pow(1 + p, n)) / (12 * (pow(1 + p, n) - 1));
	}
	cout << fixed << setprecision(9) << p * 100;
	return 0;
} 
